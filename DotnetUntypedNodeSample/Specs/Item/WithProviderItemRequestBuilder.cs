// <auto-generated/>
using Graphdotnetv4.Specs.Item.Item;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Graphdotnetv4.Specs.Item {
    /// <summary>
    /// Builds and executes requests for operations under \specs\{provider}
    /// </summary>
    public class WithProviderItemRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the Graphdotnetv4.specs.item.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="ApiJsonItemRequestBuilder"/></returns>
        public ApiJsonItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("apiJson%2Did", position);
            return new ApiJsonItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new <see cref="WithProviderItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithProviderItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/specs/{provider}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="WithProviderItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithProviderItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/specs/{provider}", rawUrl) {
        }
    }
}
