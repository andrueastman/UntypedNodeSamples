/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package javaclient.app;

import com.microsoft.kiota.authentication.AnonymousAuthenticationProvider;
import com.microsoft.kiota.http.OkHttpRequestAdapter;
import com.microsoft.kiota.serialization.UntypedArray;
import com.microsoft.kiota.serialization.UntypedNode;
import com.microsoft.kiota.serialization.UntypedObject;

public class App {
    public static void main(String[] args) {
        var authProvider = new AnonymousAuthenticationProvider();
        var requestAdapter = new OkHttpRequestAdapter(authProvider);
        var apiClient = new javaclient.client.ApiClient(requestAdapter);
        var response = apiClient.metricsJson().get();

        parseUntypedNode(response.getDatasets());
    }

    public static void parseUntypedNode(UntypedNode node) {
        parseUntypedNode(node, "");
    }

    public static void parseUntypedNode(UntypedNode node, String indent) {
        switch (node) {
            case UntypedArray array -> {
                System.out.println(indent + "Found array value");
                for(var item: array.getValue()){
                    System.out.println(indent + "New Item");
                    parseUntypedNode(item, indent + "  ");
                }
            }
            case UntypedObject object -> {
                System.out.println(indent + "Found object value");
                for(var item: object.getValue().entrySet()){
                    System.out.println(indent + "Property name: " + item.getKey());
                    parseUntypedNode(item.getValue(), indent + "  ");
                }
            }
            default -> {
                 System.out.println(indent + "Found scalar value: " + node.getValue());
            }
        };
    }
}
