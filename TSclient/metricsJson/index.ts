/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createMetricsFromDiscriminatorValue, type Metrics } from '../models/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /metrics.json
 */
export interface MetricsJsonRequestBuilder extends BaseRequestBuilder<MetricsJsonRequestBuilder> {
    /**
     * Some basic metrics for the entire directory.Just stunning numbers to put on a front page and are intended purely for WoW effect :)
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Metrics>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Metrics | undefined>;
    /**
     * Some basic metrics for the entire directory.Just stunning numbers to put on a front page and are intended purely for WoW effect :)
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const MetricsJsonRequestBuilderUriTemplate = "{+baseurl}/metrics.json";
/**
 * Metadata for all the requests in the request builder.
 */
export const MetricsJsonRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: MetricsJsonRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createMetricsFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
